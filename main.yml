name: "Terraform Plan"

trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'windows-latest'

parameters:
- name : Environment
  displayName: Environment to deploy.
  type: string
  default: Dev
  values:
  - Dev
  - Staging
  - QA
  - Prod
- name : CustomerID
  displayName: Customer ID of the client.
  type: string
  default: '0888'



steps:
- task:  ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
  displayName: "Install Terraform"
  inputs:
    terraformVersion: 'latest'
    terraformDownloadLocation: 'https://releases.hashicorp.com/terraform'
- task: TerraformCLI@1
  displayName: 'check terraform version'
  inputs:
    command: version
- task: TerraformCLI@1
  displayName: "Terraform Init"
  inputs:
    command: 'init'
    backendType: 'azurerm'
    backendServiceArm: 'ARMConnection'
    ensureBackend: true
    backendAzureRmResourceGroupName: 'tfclirg'
    backendAzureRmResourceGroupLocation: 'westeurope'
    backendAzureRmStorageAccountName: 'tfclisa'
    backendAzureRmContainerName: 'tfclicont'
    backendAzureRmKey:  "${{ parameters.CustomerID }}.${{ parameters.Environment }}.terraform.tfstate"
    allowTelemetryCollection: true
- task: TerraformCLI@1
  displayName: "Terraform Plan"
  inputs:
    command: 'plan'
    environmentServiceName: 'ARMConnection'
    commandOptions: "-out=${{ parameters.CustomerID }}.${{ parameters.Environment }}.terraform.tfplan -var='tfkey=${{ parameters.CustomerID }}.${{ parameters.Environment }}.terraform.tfplan'"
    allowTelemetryCollection: true
    publishPlanResults: "${{ parameters.CustomerID }}.${{ parameters.Environment }}.terraform.tfplan"
- task: TerraformCLI@1
  displayName: "Terraform Apply"
  inputs:
    command: 'apply'
    commandOptions: "-var#'tfkey=${{ parameters.CustomerID }}.${{ parameters.Environment }}.terraform.tfplan'"
    allowTelemetryCollection: true
